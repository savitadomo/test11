{
  "processData": "DOMO.log('metadata.report: ' + metadata.report);\n\nif(metadata.report == 'Past Hour'){\n  pastHour();\n}\nelse if(metadata.report == 'Past Day'){\n  pastDay();\n}\nelse if(metadata.report == 'Past 7 Days'){\n  past7Days();\n}\nelse if(metadata.report == 'Past 30 Days'){\n  past30Days();\n}\nelse if(metadata.report == 'Pull data from the last X day(s)'){\n  pastXDays();\n}\nelse {\n  DOMO.log(metadata.report + ' is not a supported report.');\n  datagrid.error(0, metadata.report + ' is not a supported report.');\n}\n\n//functions\n\n  function pastHour(){\n    DOMO.log('pastHour');\n    \n    processRecords('https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.geojson');\n    \n  }\n  \n  function pastDay(){\n    DOMO.log('pastDay');\n    \n    processRecords('https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojson');\n    \n  }\n  \n  function past7Days(){\n    DOMO.log('past7Days');\n    \n    processRecords('https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.geojson');\n    \n  }\n  \n  function past30Days(){\n    DOMO.log('past30Days');\n    \n    processRecords('https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson');\n    \n  }\n  \n  function pastXDays(){\n    DOMO.log('pastXDays');\n    \n    processRecords(\n      'https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=' + \n      calculateEndDate() + '&endtime=' + currentDate()\n      );\n  }\n  \n  function calculateEndDate(){\n    \n    var now = new Date(); //This will be UTC when running server side\n    var end = new Date( now.getTime() - (metadata.days * 1000 * 60 * 60 * 24) );\n    \n    DOMO.log('Start: ' + now);\n    DOMO.log('End: ' + end);\n    \n    return end.getFullYear() + '-' + \n           addOneLeadingZero(end.getMonth() + 1) + '-' + \n           addOneLeadingZero(end.getDate());\n    \n  }\n  \n  function currentDate(){\n    \n    var now = new Date(); //This will be UTC when running server side\n    \n    return now.getFullYear() + '-' + \n           addOneLeadingZero(now.getMonth() + 1) + '-' + \n           addOneLeadingZero(now.getDate());\n    \n  }\n  \n  function processRecords(url){\n\n    sql.createTable(\"earthquakes\", \"Date VarChar, Place Text, Alert Text, Mag Num\");\n    \n    httprequest.addHeader(\"key\",\"value\");\n    var res = httprequest.get(url);\n    DOMO.log('date ' + httprequest.getResponseHeader(\"Date\") );\n    DOMO.log('headers ' + httprequest.getHeader(\"key\"))\n    \n    var data = JSON.parse(res).features;\n    \n    datagrid.addColumn('Place', datagrid.DATA_TYPE_STRING);\n    datagrid.addColumn('Magnitude', datagrid.DATA_TYPE_STRING);\n    datagrid.addColumn('Time', datagrid.DATA_TYPE_DATETIME); // date format needs to be yyyy-MM-dd'T'HH:mm:ss\n    datagrid.addColumn('URL', datagrid.DATA_TYPE_STRING);\n\n    DOMO.log('data: ');\n    \n    for(var i = 0; i < data.length; i++){\n        \n        var quakeDetails = data[i].properties;\n        \n        datagrid.addCell(quakeDetails.place);\n        datagrid.addCell(quakeDetails.mag);\n        datagrid.addCell(formatTime(quakeDetails.time));\n        datagrid.addCell(quakeDetails.url);\n        \n        datagrid.endRow();\n        var color = \"green\";\n        sql.insert(\"earthquakes\", '\"'+formatTime(quakeDetails.time) +'\", \"' + quakeDetails.place+'\", \"'+color +'\", '+quakeDetails.mag);\n    }\n    sql.delete(\"earthquakes\", \"mag<1\")\n    sql.update(\"earthquakes\", 'Alert=\"red\"', \"mag=1.5\")\n    var table = sql.select(\"*\", \"earthquakes\")\n    DOMO.log(table)\n    sql.export()\n  }\n  \n  function formatTime(value){\n    \n    var d = new Date(value);\n    \n    return d.getFullYear() + '-' +  \n           addOneLeadingZero(d.getMonth() + 1) + '-' + \n           addOneLeadingZero(d.getDate()) + 'T' + \n           addOneLeadingZero(d.getHours() + 1) + ':' + \n           addOneLeadingZero(d.getMinutes() + 1) + ':' + \n           addOneLeadingZero(d.getSeconds() + 1);\n  }\n  \n  function addOneLeadingZero(value){\n    \n    if(value < 10 && value > -10){ \n      value = '0' + value;\n    }\n    \n    return value;\n  }\n  \n"
}